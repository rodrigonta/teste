
==================== FINAL INTERFACE ====================
2016-06-07 16:29:08.196787 UTC

interface main@main:Main [orphan module] 7103
  interface hash: 112ce8a05ce106ab5f2c0cb04cc8b80b
  ABI hash: 309f0f921c0ceb99a7e5fb93a5a73749
  export-list hash: 9a5a191da1da6329b8ca0e2f9314deff
  orphan hash: 601bcaf2d01853ab2ae8ed482ede45d7
  flag hash: 7752062497fd05e4bcb9a423582f58aa
  sig of: Nothing
  used TH splices: True
  where
exports:
  Main.main
module dependencies: DBA Import
package dependencies: aeson-compat-0.3.2.0@aeson_3ksJrprimYA6rSQ9jJmLhw
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.0@basec_3G7TOYmSpaF0smBtbGU3h4
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptonite-0.10@crypt_9z0j8QI27Av2VIWw0mEkTO
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptohash-conduit-0.1.1@crypt_BAJu9mKzLnyBUqveoUT0Xl
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.2@fastl_9KabkQKxs4VCYNsM5TfIRe
                      file-embed-0.0.9.1@filee_ID0BQq7SkFm2s7BTdE1urr
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.6@mimet_9JBMcwv2Xiq5zZQuEgPby5
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie
                      persistent-template-2.1.6@persi_8sx7YoFzuVB3T9GqWSsIHz
                      persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.0.1@wai_AgFrViB2yrqBxAB1eV1Klt
                      wai-app-static-3.1.5@waiap_2MSuMYPyKVZ5dZyrGTiDXU
                      wai-extra-3.0.15@waiex_K4y73Rum0vqBOJacix7YcZ
                      wai-logger-2.2.5@wailo_EOCR0JEz9CSBm71ePYsS1j
                      warp-3.2.2@warp_CKkF85pkIK9I3ekwa5mjPN
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS
                      yesod-persistent-1.4.0.4@yesod_3uaRZBCppQBHNBBQQ7ztwt
                      yesod-1.4.2.1@yesod_6BThshHwPAoI5mJ6AoEAbk
                      yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4
                      yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_3ksJrprimYA6rSQ9jJmLhw:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.1.6@persi_8sx7YoFzuVB3T9GqWSsIHz:Database.Persist.TH
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:DBA
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe:Control.Monad.Logger
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Css
                         shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS:Yesod.Static
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Handler
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Types
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.Monoid 85b292b52bfd80ed619cddb767d638d3
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k:Text.Blaze.Internal 2898da33690d2db163df0dc76596091c
import  -/  blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6:Text.Blaze.Html 75b0386c9ee854906d7c6830574b4617
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  DBA a1a3364816a6107391cb1a6957f73056
  exports: dffd608acc6596943ee641568d15fd0d
  ChecarclienteR aa9e52545c5be4dfdcf3bf15bdef1ddb
  ChecarempresaR c4b8621fc0043ca033d15447d147f194
  ChecarprestadorR 85b38315e9c3f27a50712a72e3d02134
  ChecarservicoR 144d35ba452c80bfaf625f7772a352b0
  ChecarservipR 4054d088798fd7746e0f0a5a7d50d501
  ClienteR a76e1fc6fc460888f093dc3ee108bbd8
  Clientex 0e63e70635ff32cd45daa90f76381c60
  Clientex 034be778b721f45ce5dd49ca3aebfdf9
  ClientexId f8053a43b453d0839b3efc72b07dee90
  ClientexNome 38dc680bd127f443945ef9613ad4246b
  EmpresaR 3650e801f401620d75bc0fb92f9d17db
  Empresax a0fd156fa45dcf7084a7b1283d9c10bc
  Empresax 05784394dbf4f9a71eb889a1d4d7e440
  EmpresaxId 3071cfdbd146fe1560049d66be3f050b
  EmpresaxNome 058c7b57b6018ebdece861d6dfc33b28
  ErroR b19f3d82b016754c1d7dcf904137431c
  ExcluirclienteR 811789528924e90af7ad7080797193ac
  ExcluirempresaR 941e39e028ea55c32e363cad53731975
  ExcluirprestadorR 6dae638a80348f85efbbb540e5ce6e28
  ExcluirservicoR 0126c564537f2199170c77142f1f7422
  ExcluirservipR 28adfe001c04f1c4bcccd5b3d6737d89
  Form 8754aa97ce3773be24b332cf711f2e85
  Handler 63ac2e9d8af69dfc059b86a61a9372ba
  HomeR 9fbe0e507f94515c7571fce609369a0e
  ListarclienteR 1414e37d243da703ac3f588818869bb8
  ListarempresaR e4f617a54ff814195db5e098b3cafa27
  ListarprestadorR 763ae1fdfc8b7996909956860c54cbc7
  Pagina 33d15018796081a303c6825cc0874e06
  Pagina 0350a1e9475c34a0e5c054b40474e7f6
  PrestadorR 4bdf3ce623ea0648633ac5536a363ac9
  Prestadorx cbcc00f74d8b688851ff41b21b76ce76
  Prestadorx 2aee13b25921430a4c99f69ac63c1c9c
  PrestadorxId 51e4504b9838c36d248f248fd31fb51f
  PrestadorxNome 6e64633e2d2603fa9b0e4f617cb054ad
  ServicoR deadc28790327427a09ec69bfd5e75ba
  Servicox c4f6feec28d7e195224053026c1333ba
  Servicox e32035a1dc5a2716fce81f25778196a8
  ServicoxId fe2a0bd0017b232b0c7a940f8a4ee616
  ServipR cc881fbdcdf433741b6092e4b67d9bbe
  Servipx a7048bd9303ef35bbe8240f9f784e6f0
  Servipx 31de2f89fb87df4af22fd60ef845b7ae
  ServipxId 67909e7400adc164eebd571bf476821f
  StaticR 0724b7439def4df70bf69f763a4f1795
  clientexCidade 37b4f89403caff52f06aa33c59046b7c
  clientexCpf 5052c01d50f19338ce16b424effacfbf
  clientexEndereco bfa3a4c98475fd460b8df4eb922dd3e5
  clientexEstado 8c2376a65901668d6c5faa95a4d1b751
  clientexNome 57f81aa992a723d26b866ea56d4bc11c
  clientexTelefone 1acf9145f856f46674b53d5a22c72229
  empresaxCidade dcf20dcc79412b4df1c34bdc579641d1
  empresaxCnpj d29716849066aa413bbe758476253379
  empresaxEndereco a14d692bda76e7cffb7e88bd32b270b5
  empresaxEstado 33371c7c50aaa8c0acbef454b9864f8e
  empresaxNome c1e1a2e712a7424f30e68c8ec6bcf485
  empresaxTelefone 5b132711bd553ec729caedf9e8e9d152
  getStatic ebeffa5432c7acb1f5f7bc228c8331e8
  migrateAll b67d89e5e47467c823698d2564c7c9be
  prestadorxCidade c95d2832a011ef759ac79b2cc21972c9
  prestadorxCpf 5555137a58cd837a8d0025e1dd58e6a1
  prestadorxEndereco 9ae2c1fe43fa3607811acd81115dc038
  prestadorxEstado 086fee0f7284bc511f9a1f5f40a9112f
  prestadorxNome 4ef3564873b794bd5e7f55251544bfb5
  prestadorxTelefone d19dfd52b248d83a62213e1fde281a91
  servicoxDescricao 6efdef2214c31e48f9ad26dc95126aff
  servicoxEmpresaid a88aa82ebff4fab7aaacc1c27db19b28
  servicoxPreco 94eb15dc555ee63d5d7570c176ae15ae
  servicoxTipo d93fbaac55041edba20a82ea6bbc4a9a
  servipxDescricao 2e2e2d1462f30f2ed736005214396098
  servipxPreco 4921079bfe8be918cc2108213e630ebf
  servipxPrestadorid e8d62f1dd5a1c7aaac8e0d477c72240c
  servipxTipo c607e2c33e333d9e4fedb3b53ae3959e
import  -/  Import c2369ed7f4428d69d049e1c486e66821
  exports: a81585db2453d9bbc77ba9940a721edf
  pRoutes 9f9e415e07ea3cf548084c6e26d26b66
import  -/  monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe:Control.Monad.Logger 81b2a49985398c057f2d91b2d9eaf8fc
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistEntity 3d33fe3fbfb2bbb1c148317791bf571e
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistQuery 816e6e2276281c9526c150048da69da5
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistStore 4b4b9d4bf5c256252d4ca8cbe5818ccc
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Migration 293d82a083822e623ef6a252b90747bc
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Run 547ab6fcc64d76f0c9d57d3ab4635cb2
import  -/  persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy:Database.Persist.Postgresql 83c575881d85173300453785028e12aa
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Css 354a5a67eedb1d6f80a82ff1e9f1167c
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Hamlet dbb901a94cb83f593316a487f5b7d9e8
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Julius 0ae8c5c494e5cece76503e67c1713016
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Lucius 67d7ed921a6b6620a1fd7e6b13a324d0
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.IO.Class 37487179a2f5eb2ea7922b911abcae56
import  -/  wai-3.2.0.1@wai_AgFrViB2yrqBxAB1eV1Klt:Network.Wai.Internal 4840806ef9331ea0b36e457ca8258b9c
import  -/  yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS:Yesod.Static b7ee1837f33900e9c1fd36fe91f82a76
import  -/  yesod-persistent-1.4.0.4@yesod_3uaRZBCppQBHNBBQQ7ztwt:Yesod.Persist.Core facb8f12641369c115e79e2af8484311
import  -/  yesod-1.4.2.1@yesod_6BThshHwPAoI5mJ6AoEAbk:Yesod 1e7326a307fd36f939e1a83b30324307
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Bootstrap3 0dcb86089db7f965073499dccfdc7cde
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Fields d580cf2005d76c04c27cd44f190c9e2d
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Functions 2ffe30cf5479bc6caa43ddc543de99b4
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Types cf1f76ffa32b07f582fd46b6c4d509b4
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Dispatch 21a9a76e3b7aeba215b62735af7737a7
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Yesod 71950a8e088bbe4984cac66791e91fc0
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Dispatch 34dbcd0e6806ed4f53736f0b5efb34ae
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Handler 873a6a964abd41ff51a19b2315f83ab9
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.Run 025fc28936cb807d8dd320ff05cc0793
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.TH 1bd5d395ad9820c1958ffb35e345e2be
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Types 5f739628cafdbb7e0fc7710e9874dca4
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Widget c8874eb967c6fe75e83fb00dba3fe1f3
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "hamlets/home/header.hamlet"
addDependentFile "hamlets/prestador/listarprestador.hamlet"
addDependentFile "hamlets/empresa/listarempresa.hamlet"
addDependentFile "hamlets/clientes/listarcliente.hamlet"
21a88f344ad9e16de4dbe22c60439a04
  $fYesodDispatchPagina ::
    Yesod.Core.Class.Dispatch.YesodDispatch DBA.Pagina
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBA.Pagina
                  DBA.$fYesodPagina
                  Main.$fYesodDispatchPagina_$cyesodDispatch -}
8e10aaea0544d18b0ea156df232d613c
  $fYesodDispatchPagina_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U(U,U,U,U,U,U,U,U,U,U)),U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Main.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
255c2d78b6f0ea3d38f5e3a2c9e3bb88
  $s$fApplicativeLoggingT ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fApplicativeLoggingT1
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO) -}
5c3c12af2e1897a1dfec9bf2103665e6
  $s$fApplicativeLoggingT1 ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT -}
acd05198ee802cdf171ae2bdd00114ec
  $s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure ::
    a -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240
                   eta :: a240
                   eta1 :: Language.Haskell.TH.Syntax.Loc
                           -> Control.Monad.Logger.LogSource
                           -> Control.Monad.Logger.LogLevel
                           -> System.Log.FastLogger.LogStr.LogStr
                           -> GHC.Types.IO ()
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO @ a240 eta)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <a240>_R)
                   eta2)
                  `cast`
                (forall a240.
                 <a240>_R
                 ->_R Trans
                          (<Language.Haskell.TH.Syntax.Loc
                            -> Control.Monad.Logger.LogSource
                            -> Control.Monad.Logger.LogLevel
                            -> System.Log.FastLogger.LogStr.LogStr
                            -> GHC.Types.IO ()>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <a240>_R))
                          (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                    <GHC.Types.IO>_R <a240>_N))) -}
7dc910612c20994c7a8b819e7ab81f1d
  $s$fApplicativeLoggingT_$s$fFunctorLoggingT ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$cfmap
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$c<$
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO) -}
944c53d7323779f21d6f98a7bd895e04
  $s$fApplicativeNoLoggingT ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fApplicativeNoLoggingT5
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$cpure
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1) -}
c3db7cb1831aeef4c31b3cefc0952b02
  $s$fApplicativeNoLoggingT1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT -}
4ad2326b9e38615e26f5fd887bf52704
  $s$fApplicativeNoLoggingT2 ::
    GHC.Base.String
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        GHC.Types.IO a240)
                   eta) -}
be40f7ea6c925c3da654669efb269991
  $s$fApplicativeNoLoggingT3 ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT -}
7263806020430f285f19458b5e7be604
  $s$fApplicativeNoLoggingT4 ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fFunctorResourceT -}
8d0b8cd007db07d4adb66bfae9c89026
  $s$fApplicativeNoLoggingT5 ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT -}
37b517ac6fdd8a9b1e2dc7df64b7a2bd
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT4
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT4
                     GHC.Base.$fApplicativeIO)
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*>
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<* -}
8da1ee71bab323742c6b795ece0832d2
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a240
                   @ b
                   eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a240
                   eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO b
                   eta2 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                 GHC.Base.$fApplicativeIO_$sap
                   @ b
                   @ b
                   ((Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                       @ GHC.Types.IO
                       GHC.Base.$fFunctorIO
                       @ (b -> b)
                       @ a240
                       (GHC.Base.id @ b)
                       eta)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b -> b>_N)
                      eta2)
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2))
                  `cast`
                (forall a240 b.
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    GHC.Types.IO a240>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                               <GHC.Types.IO>_R <b>_N)) -}
4e12239052d6e43f64c450d0f0cf64e3
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<* ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,1*C1(C1(U(U,A)))><L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a240
                   @ b
                   eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a240
                   eta1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO b
                   eta2 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                 GHC.Base.$fApplicativeIO_$sap
                   @ b
                   @ a240
                   ((Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                       @ GHC.Types.IO
                       GHC.Base.$fFunctorIO
                       @ a240
                       @ (b -> a240)
                       (GHC.Base.const @ a240 @ b)
                       eta)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b -> a240>_N)
                      eta2)
                   (eta1
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta2))
                  `cast`
                (forall a240 b.
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    GHC.Types.IO a240>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                               <GHC.Types.IO>_R <a240>_N)) -}
0632c8e672c576ef4fcef8fcd717f40c
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240
                   eta :: a240
                   eta1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO @ a240 eta)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <a240>_R)
                   eta2)
                  `cast`
                (forall a240.
                 <a240>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <a240>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                    <GHC.Types.IO>_R <a240>_N))) -}
b7673fd62f577db9c30667e9441ccb15
  $s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$cfmap
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$c<$
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1) -}
4cd4e1dbffe36c972f1e80208b1fc42c
  $s$fApplicativeNoLoggingT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ GHC.Types.IO
                     GHC.Base.$fFunctorIO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ GHC.Types.IO
                     GHC.Base.$fFunctorIO) -}
1be5bdf04b670c9be269a7c3cfeb15bc
  $s$fApplicativeNoLoggingT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT3
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT3
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn
                  Main.$s$fApplicativeNoLoggingT2 -}
b58c742544c82d3631914614f2352163
  $s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure -}
723d11f15f33f8a45b964725c69ed1af
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fApplicativeWidgetT1
                  Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
01c59083a1ffc3133fb2fb985e11efd8
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Form.Fields.$s$fFunctorWidgetT @ DBA.Pagina) -}
756c286592f8b54a083ed238c03b40d5
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a240
                   @ b
                   eta :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a240
                   eta1 :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ DBA.Pagina
                   @ GHC.Types.IO
                   Main.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Form.Fields.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ DBA.Pagina
                      @ (b -> b)
                      @ a240
                      (GHC.Base.id @ b)
                      eta)
                   eta1) -}
034d80e5b43a84822933940cc9ff9f9c
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a240
                   @ b
                   eta :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a240
                   eta1 :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ DBA.Pagina
                   @ GHC.Types.IO
                   Main.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a240
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ DBA.Pagina
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a240
                      @ (b -> a240)
                      (GHC.Base.const @ a240 @ b)
                      eta)
                   eta1) -}
6239b075bac0d74c29afe20ad26439e8
  $s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn ::
    a -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a240
                   a241 :: a240
                   eta :: Yesod.Core.Types.HandlerData
                            DBA.Pagina (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a240,
                       Yesod.Core.Types.GWData (Yesod.Routes.Class.Route DBA.Pagina))
                    (a241,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route DBA.Pagina)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a240,
                        Yesod.Core.Types.GWData (Yesod.Routes.Class.Route DBA.Pagina))>_R)
                   eta1)
                  `cast`
                (forall a240.
                 <a240>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              DBA.Pagina (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a240,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route DBA.Pagina))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <DBA.Pagina>_N <GHC.Types.IO>_N <a240>_N))) -}
814ded3ed10d65802bdfcc24e3a86f6e
  $s$fMonadBaseControlbLoggingT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
706abcadad08edeef14894f939485101
  $s$fMonadBaseControlbLoggingT1 ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT -}
037026569183ace727a1c45a5114eb1b
  $s$fMonadBaseControlbLoggingT2 ::
    GHC.Base.String -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO a240)
                   eta) -}
9c586e6fe747aa6698b84ab7eb55505b
  $s$fMonadBaseControlbLoggingT3 ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT -}
e962fecf63e728c01d353e86d53937c6
  $s$fMonadBaseControlbLoggingT_$dMonadBase ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT -}
5ae41ef26df057f5bc091cf0b2de739a
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBaseControlbLoggingT3
                  GHC.Base.$fMonadIO
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
63583100357cb739d0be1846ca4b9a1d
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase ::
    GHC.Types.IO α -> Control.Monad.Logger.LoggingT GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ α eta :: GHC.Types.IO α ->
                 let {
                   eta1 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ ds2 :: Language.Haskell.TH.Syntax.Loc
                           -> Control.Monad.Logger.LogSource
                           -> Control.Monad.Logger.LogLevel
                           -> System.Log.FastLogger.LogStr.LogStr
                           -> GHC.Types.IO () ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <α>_N))) -}
980dd404d03225e5951a0bff7c179048
  $s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT3
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  Main.$s$fMonadBaseControlbLoggingT2 -}
946fa1a1fb86cdf799779b30372ce104
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
d33d5503207bc06267bf9c4a569977fe
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
3b5c0c7f42a7635621705749920cf71c
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a240)
                   eta) -}
049a915012f06caedd4ab7145af9b97c
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeWidgetT -}
e1ba2a79832da70170a561b72b8f1822
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  Main.$s$fMonadBasebWidgetT2 -}
bc0bfecf180af5c9bb658c889d0e947c
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadHandlerWidgetT2
                     Main.$s$fMonadHandlerWidgetT1) -}
6036f82b7a394f47383c973ee069c3b8
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
874c2da3328c022abe3540d8e693d41e
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
468a1e931473b864a0e49e535c576a12
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fMonadBasebWidgetT -}
fa7c630822d291e64d048bcb552862c2
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
11e05aa3c088b82897a3ff5e5793dd25
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
9784be4834b6d64dfb4f978f1f4659f7
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
27268099d6bdfaa1f1fa395a69a9e445
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadHandlerWidgetT5
                  Main.$s$fMonadHandlerWidgetT4
                  Main.$s$fMonadBasebWidgetT3
                  Main.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadHandlerWidgetT5
                     Main.$s$fMonadHandlerWidgetT4
                     Main.$s$fMonadBasebWidgetT3
                     Main.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
27ee6f54d9305e1cef76c1c6977370d9
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
bd479e34d5d24a5d057f137e76d031bd
  $s$fMonadIOLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
bfe0a49bba0aa46575632dd2c5270d77
  $s$fMonadIONoLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT2
                  (Control.Monad.Logger.$fMonadIONoLoggingT_$cliftIO
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT2
                     Main.$s$fMonadIONoLoggingT1) -}
a6cf402826721e9bbf29ff498f78e67e
  $s$fMonadIONoLoggingT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT -}
0c3f96e176d9496dc6528a452f68a94b
  $s$fMonadIONoLoggingT2 ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT -}
aa3b7f75d9b785af4f249b8475b6161d
  $s$fMonadIONoLoggingT3 ::
    GHC.Base.String
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a240 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.NoLoggingT
                        (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                        a240)
                   eta) -}
1247b26d6e69640881232540bf929c50
  $s$fMonadIONoLoggingT4 ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT -}
f0e56ec3c0ed80d15b72a9d6c179e75b
  $s$fMonadIONoLoggingT_$s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT1
                  Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO -}
390c759fc88f5cd645501a996347ec54
  $s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a240 eta :: GHC.Types.IO a240 ->
                 let {
                   eta1 :: GHC.Types.IO a240 = GHC.Base.id @ (GHC.Types.IO a240) eta
                 } in
                 (\ ds2 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                           <GHC.Types.IO>_R <a240>_N))) -}
9db49ec6ffb28d1ae4b1e8b605d763c2
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT4
                  (Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
                  (Control.Monad.Logger.$fMonadNoLoggingT_$creturn
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT3 -}
5524817a9f4b707681f5e112137bee88
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>> ::
    Control.Monad.Logger.NoLoggingT
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a240
                   @ b
                   m6 :: Control.Monad.Logger.NoLoggingT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a240
                   k3 :: Control.Monad.Logger.NoLoggingT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b ->
                 Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   Main.$s$fMonadIONoLoggingT4
                   Main.$s$fApplicativeNoLoggingT1
                   @ a240
                   @ b
                   m6
                   (\ ds2 :: a240 -> k3)) -}
0c94ebdaee3e1b01c33ad6e1f767b166
  $s$fMonadLoggerLoggingT ::
    Control.Monad.Logger.MonadLogger
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog -}
f47d84f6338c5f0af5a35bc61aa48d05
  $s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog ::
    System.Log.FastLogger.LogStr.ToLogStr msg =>
    Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> msg
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*C1(U(U,U))><L,U><L,U><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ msg
                   $dToLogStr :: System.Log.FastLogger.LogStr.ToLogStr msg
                   a240 :: Language.Haskell.TH.Syntax.Loc
                   b :: Control.Monad.Logger.LogSource
                   c :: Control.Monad.Logger.LogLevel
                   d :: msg ->
                 let {
                   lvl271 :: System.Log.FastLogger.LogStr.LogStr
                   = $dToLogStr
                       `cast`
                     (System.Log.FastLogger.LogStr.NTCo:ToLogStr[0] <msg>_N)
                       d
                 } in
                 (\ f :: Language.Haskell.TH.Syntax.Loc
                         -> Control.Monad.Logger.LogSource
                         -> Control.Monad.Logger.LogLevel
                         -> System.Log.FastLogger.LogStr.LogStr
                         -> GHC.Types.IO () ->
                  GHC.Base.id @ (GHC.Types.IO ()) (f a240 b c lvl271))
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <()>_N))) -}
dab4dc308e13475774962988476a29d1
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadWidgetWidgetT1
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadWidgetWidgetT1
                     Main.$s$fMonadHandlerWidgetT1) -}
0ef5942118c15f665f832fc64ba97b79
  $s$fMonadWidgetWidgetT1 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT -}
702e4c575f6753df5bb0b2156b2d8575
  $stoWidget4 ::
    Yesod.Core.Types.RY DBA.Pagina ~ Yesod.Core.Types.RY DBA.Pagina
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Yesod.Core.Types.RY DBA.Pagina)
                   @ (Yesod.Core.Types.RY DBA.Pagina)
                   @~ <Yesod.Core.Types.RY DBA.Pagina>_N) -}
b47742f68b3d9474c85c8cfe98d62052
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U(U,U(U,U,U,U,U,U,U,U,U,U)),U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
3dc0a38618d3ecb38f734d8c86851c86
  main :: GHC.Types.IO ()
  {- Unfolding: ((Main.main7
                    Main.main6
                    Main.main1
                      `cast`
                    (<Database.Persist.Sql.Types.ConnectionPool>_R
                     ->_R Trans
                              (<Language.Haskell.TH.Syntax.Loc
                                -> Control.Monad.Logger.LogSource
                                -> Control.Monad.Logger.LogLevel
                                -> System.Log.FastLogger.LogStr.LogStr
                                -> GHC.Types.IO ()>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                   `cast`
                 (Control.Monad.Logger.NTCo:LoggingT[0] <GHC.Types.IO>_R <()>_N)
                   Control.Monad.Logger.runStdoutLoggingT1
                     `cast`
                   (<Language.Haskell.TH.Syntax.Loc>_R
                    ->_R <Control.Monad.Logger.LogSource>_R
                    ->_R <Control.Monad.Logger.LogLevel>_R
                    ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
3c5fcb31bde64186a3c4bc2292b2e4e2
  main1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> (Language.Haskell.TH.Syntax.Loc
        -> Control.Monad.Logger.LogSource
        -> Control.Monad.Logger.LogLevel
        -> System.Log.FastLogger.LogStr.LogStr
        -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ pool :: Database.Persist.Sql.Types.ConnectionPool
                   eta :: Language.Haskell.TH.Syntax.Loc
                          -> Control.Monad.Logger.LogSource
                          -> Control.Monad.Logger.LogLevel
                          -> System.Log.FastLogger.LogStr.LogStr
                          -> GHC.Types.IO ()
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Control.Monad.Trans.Resource.runResourceT
                         @ GHC.Types.IO
                         @ ()
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (Database.Persist.Sql.Run.$swithResource1
                            @ Database.Persist.Sql.Types.SqlBackend
                            @ ()
                            pool
                            Main.main4)
                           `cast`
                         (Trans
                              (<GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                        `cast`
                      (GHC.Types.NTCo:IO[0] <()>_R)
                        eta1 of ds2 { (#,#) ipv ipv1 ->
                 case Yesod.Static.static2
                        Main.main3
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 Yesod.Core.Dispatch.warp1
                   @ DBA.Pagina
                   Main.$fYesodDispatchPagina
                   Main.main2
                   (DBA.Pagina
                      pool
                      (WaiAppStatic.Types.StaticSettings
                         (WaiAppStatic.Storage.Filesystem.defaultWebAppSettings5
                            (\ f :: GHC.IO.FilePath
                               s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                             (# s1,
                                Yesod.Static.$slookup1
                                  @ Data.ByteString.Internal.ByteString
                                  f
                                  ipv3 #))
                              `cast`
                            (<GHC.IO.FilePath>_R
                             ->_R Sym (GHC.Types.NTCo:IO[0]
                                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R))
                            Main.main3)
                           `cast`
                         (<WaiAppStatic.Types.Pieces>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0]
                                        <WaiAppStatic.Types.LookupResult>_R))
                         WaiAppStatic.Storage.Filesystem.defaultWebAppSettings1
                           `cast`
                         (<WaiAppStatic.Types.File>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0] <Network.Mime.MimeType>_R))
                         (GHC.Types.[] @ WaiAppStatic.Types.Piece)
                         (GHC.Base.Nothing @ WaiAppStatic.Types.Listing)
                         WaiAppStatic.Types.MaxAgeForever
                         Util.defaultMkRedirect
                         GHC.Types.False
                         GHC.Types.True
                         GHC.Types.False
                         (GHC.Base.Nothing @ Network.Wai.Application))
                        `cast`
                      (Sym (Yesod.Static.NTCo:Static[0])))
                   ipv2 } }) -}
00fde0c9dd045d16140bf6fe327cb707
  main2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8080) -}
76dca9446feea6339e529e8418c9f2b9
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "."#) -}
c31c02628e28f978b6d2230af857c7be
  main4 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.liftSqlPersistMPool_$srunSqlConn
                   @ ()
                   Main.main5
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Control.Monad.Logger.NoLoggingT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R
                             <()>_N))) -}
27286b65b2743ca047e2ab7a5708e898
  main5 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   a240 :: Control.Monad.Logger.NoLoggingT
                             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                             [Data.Text.Internal.Text]
                   = Database.Persist.Sql.Migration.runMigration1
                       @ (Control.Monad.Logger.NoLoggingT
                            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                       Main.$s$fMonadIONoLoggingT
                       DBA.migrateAll1
                         `cast`
                       (Trans
                            (<Database.Persist.Sql.Types.SqlBackend>_R
                             ->_R Sym (GHC.Types.NTCo:IO[0]
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_R))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                           <Database.Persist.Sql.Types.SqlBackend>_R
                                           <GHC.Types.IO>_R
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_N))
                                 (Trans
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[(GHC.Types.Bool,
                                                   Database.Persist.Sql.Types.Sql)]>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Database.Persist.Sql.Types.SqlBackend
                                                   GHC.Types.IO>_R
                                                <((), [Data.Text.Internal.Text])>_N))
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[Data.Text.Internal.Text]>_N
                                                <Control.Monad.Trans.Writer.Lazy.WriterT
                                                   Database.Persist.Sql.Types.CautiousMigration
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      Database.Persist.Sql.Types.SqlBackend
                                                      GHC.Types.IO)>_R
                                                <()>_N)))))
                       GHC.Types.False
                       eta
                 } in
                 (\ r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (a240
                          `cast`
                        (Trans
                             (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                     GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N)
                             (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                  <GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N))
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0] <[Data.Text.Internal.Text]>_R)
                         s of ds2 { (#,#) ipv ipv1 ->
                  (# ipv, GHC.Tuple.() #) })
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                      (Trans
                           (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                     <GHC.Types.IO>_R <()>_N))
                           (Sym (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                        GHC.Types.IO>_R) <()>_N)))) -}
6d0dd610dab48d178fbd27094d5673b9
  main6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
70bf15c6c737228f28012e4b5d52b23b
  main7 ::
    GHC.Types.Int
    -> (Database.Persist.Sql.Types.ConnectionPool
        -> Control.Monad.Logger.LoggingT GHC.Types.IO ())
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Unfolding: (Database.Persist.Postgresql.withPostgresqlPool
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                   @ ()
                   Main.$s$fMonadBaseControlbLoggingT
                   Main.$s$fMonadLoggerLoggingT
                   Main.$s$fMonadIOLoggingT
                   Main.main8) -}
0a8384141a3fdf5d7d9889c482ea3e64
  main8 :: Database.Persist.Postgresql.ConnectionString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds2 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr#
                   = "dbname=d73v9jtp1m4gmm host=ec2-23-21-193-140.compute-1.amazonaws.com user=wxijesuruymxxv password=olhACvaEhpoy498TfYAlN_kTYc port=5432"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6 strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0
                   (GHC.Prim.word2Int# ds4) } }) -}
eb6f2d9ffa7c184f4f4fa6838b8649cf
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1 @ () Main.main) -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [DBA.Pagina]
  = Main.$fYesodDispatchPagina
"SPEC/Main $fApplicativeLoggingT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                      (Control.Monad.Logger.LoggingT
                                                                         GHC.Types.IO)
                                                       $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeLoggingT
"SPEC/Main $fApplicativeLoggingT_$cpure @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                             (Control.Monad.Logger.LoggingT
                                                                                GHC.Types.IO)
                                                              $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT_$cpure @ GHC.Types.IO
                                                    $dFunctor
                                                    $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
"SPEC/Main $fApplicativeNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                    (Control.Monad.Logger.NoLoggingT
                                                                                       (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                          GHC.Types.IO))
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                     GHC.Types.IO)
  Control.Monad.Logger.$fApplicativeNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               $dFunctor
                                               $dMonad
  = Main.$s$fApplicativeNoLoggingT
"SPEC/Main $fApplicativeResourceT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                       (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                          GHC.Types.IO)
                                                        $dApplicative :: GHC.Base.Applicative
                                                                           GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               $dFunctor
                                                               $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$c*> @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
                                                             $dApplicative :: GHC.Base.Applicative
                                                                                GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*> @ GHC.Types.IO
                                                                    $dFunctor
                                                                    $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*>
"SPEC/Main $fApplicativeResourceT_$c<* @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
                                                             $dApplicative :: GHC.Base.Applicative
                                                                                GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<* @ GHC.Types.IO
                                                                    $dFunctor
                                                                    $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<*
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
                                                               $dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dFunctor
                                                                      $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure
"SPEC/Main $fApplicativeWidgetT @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                              (Yesod.Core.Types.WidgetT
                                                                                 DBA.Pagina
                                                                                 GHC.Types.IO)
                                                               $dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ DBA.Pagina
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Main.$s$fApplicativeWidgetT
"SPEC/Main $fApplicativeWidgetT_$c*> @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ DBA.Pagina
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Main $fApplicativeWidgetT_$c<* @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ DBA.Pagina
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Main $fFunctorLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                GHC.Types.IO
  Control.Monad.Logger.$fFunctorLoggingT @ GHC.Types.IO $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT
"SPEC/Main $fFunctorNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
  Control.Monad.Logger.$fFunctorNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
"SPEC/Main $fFunctorResourceT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                   GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           $dFunctor
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorResourceT
"SPEC/Main $fMonadBaseControlbLoggingT @ IO @ IO" [ALWAYS] forall $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   (Control.Monad.Logger.LoggingT
                                                                                      GHC.Types.IO)
                                                                  $dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                          GHC.Types.IO
                                                                                          GHC.Types.IO
  Control.Monad.Logger.$fMonadBaseControlbLoggingT @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   $dMonadBase
                                                   $dMonadBaseControl
  = Main.$s$fMonadBaseControlbLoggingT
"SPEC/Main $fMonadBasebLoggingT @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                              GHC.Types.IO
                                                           $dApplicative1 :: GHC.Base.Applicative
                                                                               (Control.Monad.Logger.LoggingT
                                                                                  GHC.Types.IO)
                                                           $dMonad :: GHC.Base.Monad GHC.Types.IO
                                                           $dMonad1 :: GHC.Base.Monad
                                                                         (Control.Monad.Logger.LoggingT
                                                                            GHC.Types.IO)
                                                           $dMonadBase :: Control.Monad.Base.MonadBase
                                                                            GHC.Types.IO
                                                                            GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT @ GHC.Types.IO
                                            @ GHC.Types.IO
                                            $dApplicative
                                            $dApplicative1
                                            $dMonad
                                            $dMonad1
                                            $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT
"SPEC/Main $fMonadBasebLoggingT_$cliftBase @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                      $dApplicative1 :: GHC.Base.Applicative
                                                                                          (Control.Monad.Logger.LoggingT
                                                                                             GHC.Types.IO)
                                                                      $dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO
                                                                      $dMonad1 :: GHC.Base.Monad
                                                                                    (Control.Monad.Logger.LoggingT
                                                                                       GHC.Types.IO)
                                                                      $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT_$cliftBase @ GHC.Types.IO
                                                       @ GHC.Types.IO
                                                       $dApplicative
                                                       $dApplicative1
                                                       $dMonad
                                                       $dMonad1
                                                       $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase
"SPEC/Main $fMonadBasebWidgetT @ IO @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                      GHC.Types.IO
                                                                   $dApplicative1 :: GHC.Base.Applicative
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          DBA.Pagina
                                                                                          GHC.Types.IO)
                                                                   $dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO
                                                                   $dMonad1 :: GHC.Base.Monad
                                                                                 (Yesod.Core.Types.WidgetT
                                                                                    DBA.Pagina
                                                                                    GHC.Types.IO)
                                                                   $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                    GHC.Types.IO
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ DBA.Pagina
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Main.$s$fMonadBasebWidgetT
"SPEC/Main $fMonadHandlerWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        DBA.Pagina
                                                                                        GHC.Types.IO)
                                                                tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                         GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ DBA.Pagina
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Main.$s$fMonadHandlerWidgetT
"SPEC/Main $fMonadIOLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                (Control.Monad.Logger.LoggingT
                                                                   GHC.Types.IO)
                                                   $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO
  Control.Monad.Logger.$fMonadIOLoggingT @ GHC.Types.IO
                                         $dMonad
                                         $dMonadIO
  = Main.$s$fMonadIOLoggingT
"SPEC/Main $fMonadIONoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Logger.NoLoggingT
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO))
                                                                 $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                   GHC.Types.IO)
  Control.Monad.Logger.$fMonadIONoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
                                           $dMonadIO
  = Main.$s$fMonadIONoLoggingT
"SPEC/Main $fMonadIOResourceT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                    GHC.Types.IO)
                                                    $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                   GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           $dMonad
                                                           $dMonadIO
  = Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                          (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                             GHC.Types.IO)
                                                             $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonad
                                                                    $dMonadIO
  = Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadIOWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                        (Yesod.Core.Types.WidgetT
                                                                           DBA.Pagina GHC.Types.IO)
                                                           $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                          GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ DBA.Pagina
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Main $fMonadLoggerLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                       $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                      GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT @ GHC.Types.IO
                                             $dMonad
                                             $dMonadIO
  = Main.$s$fMonadLoggerLoggingT
"SPEC/Main $fMonadLoggerLoggingT_$cmonadLoggerLog @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                                     (Control.Monad.Logger.LoggingT
                                                                                        GHC.Types.IO)
                                                                        $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT_$cmonadLoggerLog @ GHC.Types.IO
                                                              $dMonad
                                                              $dMonadIO
  = Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog
"SPEC/Main $fMonadLoggingT @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                 $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggingT @ GHC.Types.IO
                                       $dApplicative
                                       $dMonad
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT
"SPEC/Main $fMonadNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                  (Control.Monad.Logger.NoLoggingT
                                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                        GHC.Types.IO))
                                                               $dMonad :: GHC.Base.Monad
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                              GHC.Types.IO)
                                         $dApplicative
                                         $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT
"SPEC/Main $fMonadNoLoggingT_$c>> @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                          (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                             GHC.Types.IO))
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT_$c>> @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                   GHC.Types.IO)
                                              $dApplicative
                                              $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
"SPEC/Main $fMonadResourceT @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                        GHC.Types.IO)
                                                  $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         $dApplicative
                                                         $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT_$creturn @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
                                                           $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ GHC.Types.IO
                                                                  $dApplicative
                                                                  $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn
"SPEC/Main $fMonadResourceWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                 $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                (Yesod.Core.Types.WidgetT
                                                                                   DBA.Pagina
                                                                                   GHC.Types.IO)
                                                                 $dApplicative :: GHC.Base.Applicative
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       DBA.Pagina
                                                                                       GHC.Types.IO)
                                                                 $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                  GHC.Types.IO
                                                                                  (Yesod.Core.Types.WidgetT
                                                                                     DBA.Pagina
                                                                                     GHC.Types.IO)
                                                                 $dApplicative1 :: GHC.Base.Applicative
                                                                                     GHC.Types.IO
                                                                 $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                 GHC.Types.IO
                                                                 $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   GHC.Types.IO
                                                                 $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ DBA.Pagina
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Main $fMonadThrowWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                           (Yesod.Core.Types.WidgetT
                                                                              DBA.Pagina
                                                                              GHC.Types.IO)
                                                              $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ DBA.Pagina
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Main $fMonadWidgetT @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                            (Yesod.Core.Types.WidgetT
                                                                               DBA.Pagina
                                                                               GHC.Types.IO)
                                                         $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ DBA.Pagina
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Main.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
"SPEC/Main $fMonadWidgetT_$creturn @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        DBA.Pagina
                                                                                        GHC.Types.IO)
                                                                  $dMonad :: GHC.Base.Monad
                                                                               GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT_$creturn @ DBA.Pagina
                                           @ GHC.Types.IO
                                           $dApplicative
                                           $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
"SPEC/Main $fMonadWidgetWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                               tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                        GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ DBA.Pagina
                                                @ GHC.Types.IO
                                                $dMonadHandler
                                                tup
  = Main.$s$fMonadWidgetWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

