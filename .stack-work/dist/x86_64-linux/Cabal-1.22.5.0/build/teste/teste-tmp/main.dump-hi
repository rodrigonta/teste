
==================== FINAL INTERFACE ====================
2016-06-08 05:01:49.188149 UTC

interface main@main:Main [orphan module] 7103
  interface hash: 71f3cc6a59ba0219d56ccb987dc305e4
  ABI hash: 8b351a2c8b342ce95c05b6997eb4c3cc
  export-list hash: 6b51d4fc94e2bd5022f9ec766b9fd641
  orphan hash: a0cdbfbfc9a3b3e34acdc545de531c82
  flag hash: 7752062497fd05e4bcb9a423582f58aa
  sig of: Nothing
  used TH splices: True
  where
exports:
  Main.main
module dependencies: DBA Import
package dependencies: aeson-compat-0.3.2.0@aeson_3ksJrprimYA6rSQ9jJmLhw
                      aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG
                      auto-update-0.1.3@autou_19qtEoqMgV6FQlA1CkY9Cg base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.0@basec_3G7TOYmSpaF0smBtbGU3h4
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.1@blaze_4KI2nf4lf9oHEgXiILyTYj
                      blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k
                      blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_05l5iiwk2FiGu4DeOqOIxC
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_LuobzRZeZj55iOint27HgG
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-extra-1.1.13.1@condu_JrYHSonW303HUe4R7rhE0T
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.1.6@cooki_2Eb4iZo39x3Ihl7jVKbtZO
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptonite-0.10@crypt_9z0j8QI27Av2VIWw0mEkTO
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptohash-conduit-0.1.1@crypt_BAJu9mKzLnyBUqveoUT0Xl
                      crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx
                      css-text-0.1.2.1@csste_BKK1KtEb1sJ9s7LwxLpwLq
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.2@fastl_9KabkQKxs4VCYNsM5TfIRe
                      file-embed-0.0.9.1@filee_ID0BQq7SkFm2s7BTdE1urr
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DiIK6FZsEORCMOaqj3QSEe
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_K48ICbZdR7j4Lbow4Laii0
                      http-types-0.9@httpt_1qktWOgbYARKyaY9syDTns integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.6@mimet_9JBMcwv2Xiq5zZQuEgPby5
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie
                      persistent-template-2.1.6@persi_8sx7YoFzuVB3T9GqWSsIHz
                      persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.2@postg_9k9Uw6R9foNDbRYAVYjlMk
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.0@psque_Eu4cvucK9D300LguHeaq9c
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO
                      shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Gu4ZCUdyHoJKdYGOgDHOva
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.2@strea_0Pv1kz8leJoAmtjyRTUWHG
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.0.1@wai_AgFrViB2yrqBxAB1eV1Klt
                      wai-app-static-3.1.5@waiap_2MSuMYPyKVZ5dZyrGTiDXU
                      wai-extra-3.0.15@waiex_K4y73Rum0vqBOJacix7YcZ
                      wai-logger-2.2.5@wailo_EOCR0JEz9CSBm71ePYsS1j
                      warp-3.2.2@warp_CKkF85pkIK9I3ekwa5mjPN
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.6@xsssa_JdGY8fSYBM7LAdXrSOFQKS
                      yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS
                      yesod-persistent-1.4.0.4@yesod_3uaRZBCppQBHNBBQQ7ztwt
                      yesod-1.4.2.1@yesod_6BThshHwPAoI5mJ6AoEAbk
                      yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4
                      yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.2.0@aeson_3ksJrprimYA6rSQ9jJmLhw:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_LJIBliiEkn4J9xnahdCeak:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_Kp4uvZbywBzKttuHrlYBAx:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.1.6@persi_8sx7YoFzuVB3T9GqWSsIHz:Database.Persist.TH
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_C6pUTDzrecbIO4LDYHwJUG:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_CQXkJx3ILx16knsHT8WvIg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:DBA
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe:Control.Monad.Logger
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.List.NonEmpty
                         semigroups-0.18.1@semig_EApcHsXPsrRKUkxxoKR3HO:Data.Semigroup
                         shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Css
                         shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Shakespeare
                         tagged-0.8.3@tagge_5cptKNCoGdxJM6eqqNERxD:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS:Yesod.Static
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Handler
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Types
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.Monoid 85b292b52bfd80ed619cddb767d638d3
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-markup-0.7.0.3@blaze_C7imNkL0ufD2cjmU64FP9k:Text.Blaze.Internal 2898da33690d2db163df0dc76596091c
import  -/  blaze-html-0.8.1.1@blaze_Iq6GES6DAMS0745KzFL7i6:Text.Blaze.Html 75b0386c9ee854906d7c6830574b4617
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  DBA 8796001b158f8e8ed62cbdf64fb4e0f3
  exports: e306e40740095dd7a5348c92e5fde458
  AdminR 00f02f4ad69d24ed5bf6f25c643bca30
  ChecarclienteR 93b89d2541bdb356fdbf9a272506337a
  ChecarempresaR e4f457f4cd81cf6f83f8d54b2e8af09d
  ChecarprestadorR b60947b678b9047527279950a56d81e6
  ChecarservicoR 5c7f5a700180d0697018a61c80931a90
  ChecarservipR c0326a6556f0b17bd9d82cf0d379e7e0
  ClienteR 9efff79cf87559490d2fec194ec056ea
  Clientex 829d446159adc3338c640195d68b19ec
  Clientex c5045012bc1b4ba2a322b1a6d7286630
  ClientexId 8d1cb154420d06c3ca78dcfaed3fa998
  ClientexNome f318ccf3d162b8cfe586ad0c556a30cf
  ClientexSenha 0a9918f6145bd6044a7a8f1034e53109
  ClientexUsername 41b2f0628c9466445b719efb7a37acde
  EmpresaR f974663d8dd96a7704d49cea49921371
  Empresax 276e8231a345efee2954e3c428510d3f
  Empresax cbb6d9d7a044c876dcc33ca31c6cd69f
  EmpresaxId 3c11c3cc5e90cfdfc18576cc1b36f4c5
  EmpresaxNome f60f8731454a9181d9710c42f4141211
  ErroR 547dd2038584442346dcaa5c76360b54
  ExcluirclienteR 224b11c0bcafe4527d9b9923c9ccdfa9
  ExcluirempresaR 389281328804bbf569108e2043e40786
  ExcluirprestadorR 459aacb695e64ba43065a96faf58b28d
  ExcluirservicoR 570c38af370c75fd47de79467633f943
  ExcluirservipR 20a775df7af4445c9f16d1883f463d14
  Form b7b047ce6e494f3645b37eda08797f0c
  Handler 20db97dbaa5237fc2c53c2a52de2a23a
  HomeR 2bf7038ee810c7d64026f648add01065
  ListarclienteR b8d854c146ad32b680742b38d89aa52d
  ListarempresaR ce95d7b0acfd11b0291c03a50d6fa5f9
  ListarprestadorR f65b80a266eba710155c69dd1f6ee143
  ListarservicoR b6342671d5c23368df9de9eb572ce6b6
  LoginR 055d13d6e1ea2130532911d31544cde0
  LogoutR 90b74d357a23316fbeda2898f3762209
  Pagina 408908caab26371a1008640bb6c4508c
  Pagina fc6748d1695cb1b77f975e44c6a44a38
  PrestadorR d86228f4f9980316664e08e88002fd08
  Prestadorx f8eda5a718a1694414832f5f7bb19b16
  Prestadorx fce0e090eaea33444ab816c36a17ac8e
  PrestadorxId a821d92283103e782cfb055f647f39c3
  PrestadorxNome 702d6ad6759952ec8cbf80ecf45d1dc5
  ServicoR d3c7c041762e1970c5075efda71cf0b5
  Servicox 2de05273b38345357da61ee0ab158f7f
  Servicox ed75cd20e67476e6bf0e716087671611
  ServicoxId b1589a2e4a789ec98dcffe59a74d8a7a
  ServicoxTipo 2054b4dba79ba3693903d19cbfbdf766
  ServipR ec3522a7c233eda7cc400bbc952fac07
  Servipx 6a9ddbfe71239618986e212974ab0d8c
  Servipx c4e6ee3960cfe8101b70b0c5b7953050
  ServipxId 6c90343d4a07d6d92fcc4d98fd146d6c
  StaticR d9576b45c1785e8097c94a31059c44c4
  clientexCidade 3e250fbb7d564afcbe670e95d9c97803
  clientexCpf bd1ef5670dc39fe20a2c8a84585d5dd6
  clientexEndereco 0350671bb367b23d4766771fd00c21a7
  clientexEstado a408993738d1ed78597c4cd92baafee0
  clientexNome 3d2be9b56e08bd610d9b0447e6d45b4c
  clientexTelefone c200f5ea2b0329e150bd882d377f1208
  clientexUsername dd806eb610c94908bc8b772722118b57
  css_menu_css 88219d43508da242bf9efaf3b0ed044b
  empresaxCidade b9d74f9be9579df7939f0f3d9d18de07
  empresaxCnpj 5fb3df15af27a821b439dd09b4088397
  empresaxEndereco efb175050650a5b97ec5854efa60b80a
  empresaxEstado 480e27b1131a05f1b7f3966cce588d65
  empresaxNome 1c3758932ff95f273cb9ae0e5ea7f52c
  empresaxTelefone b2fe63a22e73f74a0a0421bd35a57088
  getStatic 16a61f17f2ba587f00d9b10e3c9057e7
  img_servicos_png 2071fb1eb6253c10a4b16f07d9d3c15a
  migrateAll 3f2caea2919c9e4d0aa6f011d41772fd
  prestadorxCidade 46ffc0f56751f809e1832f8dbe66e05d
  prestadorxCpf f5bcb92e53a9613623a6f41256088e17
  prestadorxEndereco c62680dd9a0ae9e31f808c633df1c141
  prestadorxEstado 69b17a598a62e2c1040b4a64c1c60aee
  prestadorxNome 1cb6b512770ccad2cf3bb3aaf9fc77c8
  prestadorxTelefone 6308e80557738060ed6c5334b26db256
  servicoxDescricao ee72b7ae10b91b828c92a51d7289f1ed
  servicoxEmpresaid 67e5589bb77cf94db3ac38e2ef228775
  servicoxPreco ec113b64b7bbd84789245e5fd119d66d
  servicoxTipo caf88ca630b6c868d4818fa551b50de9
  servipxDescricao b4a42a1a2d74675b73a5990dd52cd424
  servipxPreco 42d83a7ef26997debc2447b8076cd52f
  servipxPrestadorid ef708f051ee78f32f8dd791ce7352841
  servipxTipo d373466dc32123539fa15ff884df179a
import  -/  Import c2369ed7f4428d69d049e1c486e66821
  exports: a81585db2453d9bbc77ba9940a721edf
  pRoutes 9f9e415e07ea3cf548084c6e26d26b66
import  -/  monad-logger-0.3.18@monad_J6La1we3TquCPYRiGrmUYe:Control.Monad.Logger 81b2a49985398c057f2d91b2d9eaf8fc
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist d867d6156c11ceba572af7b3bdbade96
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistEntity 3d33fe3fbfb2bbb1c148317791bf571e
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistQuery 816e6e2276281c9526c150048da69da5
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Class.PersistStore 4b4b9d4bf5c256252d4ca8cbe5818ccc
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Migration 293d82a083822e623ef6a252b90747bc
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Orphan.PersistStore f8158b14d98a2e282883b0767428a702
import  -/  persistent-2.2.4.1@persi_28DyVqBYnx4IatlD1Qhuie:Database.Persist.Sql.Run 547ab6fcc64d76f0c9d57d3ab4635cb2
import  -/  persistent-postgresql-2.2.2@persi_GEuAA7V2ZvKExxgJjBYicy:Database.Persist.Postgresql 83c575881d85173300453785028e12aa
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Css 354a5a67eedb1d6f80a82ff1e9f1167c
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Hamlet dbb901a94cb83f593316a487f5b7d9e8
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Julius 0ae8c5c494e5cece76503e67c1713016
import  -/  shakespeare-2.0.8@shake_1o7sYIVV5UR9j4PxxRPUv5:Text.Lucius 67d7ed921a6b6620a1fd7e6b13a324d0
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time 05c0775841fb44d3c8063cb78d933b0f
import  -/  transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.IO.Class 37487179a2f5eb2ea7922b911abcae56
import  -/  wai-3.2.0.1@wai_AgFrViB2yrqBxAB1eV1Klt:Network.Wai.Internal 4840806ef9331ea0b36e457ca8258b9c
import  -/  yesod-static-1.5.0.3@yesod_2VgVZtFqbFAHl59b4bugSS:Yesod.Static b7ee1837f33900e9c1fd36fe91f82a76
import  -/  yesod-persistent-1.4.0.4@yesod_3uaRZBCppQBHNBBQQ7ztwt:Yesod.Persist.Core facb8f12641369c115e79e2af8484311
import  -/  yesod-1.4.2.1@yesod_6BThshHwPAoI5mJ6AoEAbk:Yesod 1e7326a307fd36f939e1a83b30324307
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Bootstrap3 0dcb86089db7f965073499dccfdc7cde
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Fields d580cf2005d76c04c27cd44f190c9e2d
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Functions 2ffe30cf5479bc6caa43ddc543de99b4
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Jquery 988133ca40b692c83a03a896c9cabfb6
import  -/  yesod-form-1.4.7@yesod_6rS4TZWVYaz6BDDuViI3c4:Yesod.Form.Types cf1f76ffa32b07f582fd46b6c4d509b4
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Dispatch 21a9a76e3b7aeba215b62735af7737a7
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Class.Yesod 71950a8e088bbe4984cac66791e91fc0
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Dispatch 34dbcd0e6806ed4f53736f0b5efb34ae
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Handler 873a6a964abd41ff51a19b2315f83ab9
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.Run 025fc28936cb807d8dd320ff05cc0793
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Internal.TH 1bd5d395ad9820c1958ffb35e345e2be
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Types 5f739628cafdbb7e0fc7710e9874dca4
import  -/  yesod-core-1.4.20@yesod_JLQQ4eq0CXi8EhcgvEN35F:Yesod.Core.Widget c8874eb967c6fe75e83fb00dba3fe1f3
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "hamlets/home/index.hamlet"
addDependentFile "hamlets/prestador/listarprestador.hamlet"
addDependentFile "hamlets/empresa/listarservico.hamlet"
addDependentFile "hamlets/empresa/listarempresa.hamlet"
addDependentFile "hamlets/clientes/listarcliente.hamlet"
9d65a6ecdd396d5765d55a19a1017374
  $fYesodDispatchPagina ::
    Yesod.Core.Class.Dispatch.YesodDispatch DBA.Pagina
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBA.Pagina
                  DBA.$fYesodPagina
                  Main.$fYesodDispatchPagina_$cyesodDispatch -}
1d596375f960dca1d1227dc6cd5a5735
  $fYesodDispatchPagina_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U(U,U,U,U,U,U,U,U,U,U)),U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Main.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
13b2a158564dcfe298ca437b59fbb292
  $s$fApplicativeLoggingT ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fApplicativeLoggingT1
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fApplicativeLoggingT_$c<*
                     @ GHC.Types.IO
                     Main.$s$fApplicativeLoggingT1
                     GHC.Base.$fMonadIO) -}
5c3c12af2e1897a1dfec9bf2103665e6
  $s$fApplicativeLoggingT1 ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT -}
ba1905441f99a2e3f4bdaa48a386f2c6
  $s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure ::
    a -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295
                   eta :: a295
                   eta2 :: Language.Haskell.TH.Syntax.Loc
                           -> Control.Monad.Logger.LogSource
                           -> Control.Monad.Logger.LogLevel
                           -> System.Log.FastLogger.LogStr.LogStr
                           -> GHC.Types.IO ()
                   eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO @ a295 eta)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <a295>_R)
                   eta3)
                  `cast`
                (forall a295.
                 <a295>_R
                 ->_R Trans
                          (<Language.Haskell.TH.Syntax.Loc
                            -> Control.Monad.Logger.LogSource
                            -> Control.Monad.Logger.LogLevel
                            -> System.Log.FastLogger.LogStr.LogStr
                            -> GHC.Types.IO ()>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <a295>_R))
                          (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                    <GHC.Types.IO>_R <a295>_N))) -}
7dc910612c20994c7a8b819e7ab81f1d
  $s$fApplicativeLoggingT_$s$fFunctorLoggingT ::
    GHC.Base.Functor (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$cfmap
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fFunctorLoggingT_$c<$
                     @ GHC.Types.IO
                     GHC.Base.$fMonadIO) -}
ad0c94720a578cb93ee34d1beb0e8a2f
  $s$fApplicativeNoLoggingT ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fApplicativeNoLoggingT5
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$cpure
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c*>
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT5
                     Main.$s$fApplicativeNoLoggingT1) -}
3ae682ba04040a1bbdc09c3993c7a570
  $s$fApplicativeNoLoggingT1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT -}
1951f9079876b71b74db6bd4168b15c2
  $s$fApplicativeNoLoggingT2 ::
    GHC.Base.String
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        GHC.Types.IO a295)
                   eta) -}
31012f1aab762884c70cc65629584429
  $s$fApplicativeNoLoggingT3 ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT -}
7263806020430f285f19458b5e7be604
  $s$fApplicativeNoLoggingT4 ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fFunctorResourceT -}
471f7471f1c71f80d458a0a56bdcd58f
  $s$fApplicativeNoLoggingT5 ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT -}
7847a1bf71fd96f866b383c9ef683275
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT4
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT4
                     GHC.Base.$fApplicativeIO)
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*>
                  Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<* -}
71bbf245d48a3d17925aaf39db2d718b
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a295
                   @ b
                   eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a295
                   eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO b
                   eta3 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                 GHC.Base.$fApplicativeIO_$sap
                   @ b
                   @ b
                   ((Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                       @ GHC.Types.IO
                       GHC.Base.$fFunctorIO
                       @ (b -> b)
                       @ a295
                       (GHC.Base.id @ b)
                       eta)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b -> b>_N)
                      eta3)
                   (eta2
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta3))
                  `cast`
                (forall a295 b.
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    GHC.Types.IO a295>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                               <GHC.Types.IO>_R <b>_N)) -}
3fbe4d99459849b359a5b42ef149be70
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<* ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,1*C1(C1(U(U,A)))><L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a295
                   @ b
                   eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a295
                   eta2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO b
                   eta3 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                 GHC.Base.$fApplicativeIO_$sap
                   @ b
                   @ a295
                   ((Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                       @ GHC.Types.IO
                       GHC.Base.$fFunctorIO
                       @ a295
                       @ (b -> a295)
                       (GHC.Base.const @ a295 @ b)
                       eta)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b -> a295>_N)
                      eta3)
                   (eta2
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      eta3))
                  `cast`
                (forall a295 b.
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    GHC.Types.IO a295>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                               <GHC.Types.IO>_R <a295>_N)) -}
b1f89b91e0f2b82d0beb4f01b9757c82
  $s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295
                   eta :: a295
                   eta2 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                   eta3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO @ a295 eta)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <a295>_R)
                   eta3)
                  `cast`
                (forall a295.
                 <a295>_R
                 ->_R Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0] <a295>_R))
                          (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                    <GHC.Types.IO>_R <a295>_N))) -}
b48fb18b55bad936d97c90a307ee644e
  $s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT ::
    GHC.Base.Functor
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$cfmap
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1)
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$c<$
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fApplicativeNoLoggingT1) -}
4cd4e1dbffe36c972f1e80208b1fc42c
  $s$fApplicativeNoLoggingT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ GHC.Types.IO
                     GHC.Base.$fFunctorIO)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ GHC.Types.IO
                     GHC.Base.$fFunctorIO) -}
ff18dc9abfaa4a09e32e69f5bbd61d45
  $s$fApplicativeNoLoggingT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT3
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT3
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fApplicativeNoLoggingT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn
                  Main.$s$fApplicativeNoLoggingT2 -}
751dbc4273ee8fcf15b0691a73fb88bd
  $s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure -}
d121364148d48af1cf06d7c447c74959
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fApplicativeWidgetT1
                  Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
e81a4fd977229a202db92b1b7d752fd7
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Form.Fields.$s$fFunctorWidgetT @ DBA.Pagina) -}
06b9e460d5bbbd235b46e22712a4e97c
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a295
                   @ b
                   eta :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a295
                   eta2 :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ DBA.Pagina
                   @ GHC.Types.IO
                   Main.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Form.Fields.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ DBA.Pagina
                      @ (b -> b)
                      @ a295
                      (GHC.Base.id @ b)
                      eta)
                   eta2) -}
3ddb2c0a07dfd1b826ac8a506fe9130d
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a295
                   @ b
                   eta :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a295
                   eta2 :: Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ DBA.Pagina
                   @ GHC.Types.IO
                   Main.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a295
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ DBA.Pagina
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a295
                      @ (b -> a295)
                      (GHC.Base.const @ a295 @ b)
                      eta)
                   eta2) -}
57d4360b923b0c6b35b65f49591242f9
  $s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn ::
    a -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a295
                   a296 :: a295
                   eta :: Yesod.Core.Types.HandlerData
                            DBA.Pagina (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a295,
                       Yesod.Core.Types.GWData (Yesod.Routes.Class.Route DBA.Pagina))
                    (a296,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route DBA.Pagina)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a295,
                        Yesod.Core.Types.GWData (Yesod.Routes.Class.Route DBA.Pagina))>_R)
                   eta2)
                  `cast`
                (forall a295.
                 <a295>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              DBA.Pagina (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a295,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route DBA.Pagina))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <DBA.Pagina>_N <GHC.Types.IO>_N <a295>_N))) -}
a55537ad38937457757f4111cdc131e2
  $s$fMonadBaseControlbLoggingT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Control.Monad.Logger.$fMonadBaseControlbLoggingT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT_$dMonadBase
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
03b0720ec56bc6c487509444e6fc972a
  $s$fMonadBaseControlbLoggingT1 ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT -}
880cee769c51174d4e0ede35645f35ca
  $s$fMonadBaseControlbLoggingT2 ::
    GHC.Base.String -> Control.Monad.Logger.LoggingT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO a295)
                   eta) -}
b16d63e71c8e354e6a7a66d56bafe556
  $s$fMonadBaseControlbLoggingT3 ::
    GHC.Base.Applicative (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeLoggingT -}
0e112d919fb820c9eb32711102e1d9d7
  $s$fMonadBaseControlbLoggingT_$dMonadBase ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT -}
7477b2538226ee5481a68ea5023af526
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBaseControlbLoggingT3
                  GHC.Base.$fMonadIO
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
629ad717e64b4121bbfff57d08676462
  $s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase ::
    GHC.Types.IO α -> Control.Monad.Logger.LoggingT GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ α eta :: GHC.Types.IO α ->
                 let {
                   eta2 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ ds3 :: Language.Haskell.TH.Syntax.Loc
                           -> Control.Monad.Logger.LogSource
                           -> Control.Monad.Logger.LogLevel
                           -> System.Log.FastLogger.LogStr.LogStr
                           -> GHC.Types.IO () ->
                  eta2)
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <α>_N))) -}
4f39514599953b3efc8ae687e0f4ca15
  $s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT ::
    GHC.Base.Monad (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT3
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>=
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  (Control.Monad.Logger.$fMonadLoggingT_$c>>
                     @ GHC.Types.IO
                     Main.$s$fMonadBaseControlbLoggingT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
                  Main.$s$fMonadBaseControlbLoggingT2 -}
64e122898ca2ded02ee8cb4655155ee1
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Main.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
bd48a635843ab3fadbcab6abf460cb21
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
71c48dea580b5309cb6e084631fc924a
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO a295)
                   eta) -}
457fa654dcb54e197d9b17afdeddc8b0
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeWidgetT -}
076a039b6f6398876c205eba8311db34
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  Main.$s$fMonadBasebWidgetT2 -}
24f3e2241e0296ad885558fb5a9398b4
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadHandlerWidgetT2
                     Main.$s$fMonadHandlerWidgetT1) -}
6036f82b7a394f47383c973ee069c3b8
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
30af376e3b61c92f48adec96ac3bd887
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
f63ab6c628c190b786cdbb2650956114
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) Main.$s$fMonadBasebWidgetT -}
097b7fe0a8dba1efc7846fb706d474a8
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
8f6e3c12e4e72c2ce36c8fff12a52579
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
817f9c8c96a3688742dbd2c135db096c
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
a532c6abff59a6b74f7c7e1e5457c7f4
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadHandlerWidgetT5
                  Main.$s$fMonadHandlerWidgetT4
                  Main.$s$fMonadBasebWidgetT3
                  Main.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadHandlerWidgetT5
                     Main.$s$fMonadHandlerWidgetT4
                     Main.$s$fMonadBasebWidgetT3
                     Main.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
9a0bcbbe43fb5fd5e99162453b620349
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
26bb009d938cb32be0b267ac39f421a0
  $s$fMonadIOLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase -}
f02b7c8b663fd1bb389e80cb8a73e130
  $s$fMonadIONoLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT2
                  (Control.Monad.Logger.$fMonadIONoLoggingT_$cliftIO
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT2
                     Main.$s$fMonadIONoLoggingT1) -}
1896e5689aacd87b348bccf23694fe13
  $s$fMonadIONoLoggingT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT -}
a2b2a750596bc3fd22745254adc1e6a4
  $s$fMonadIONoLoggingT2 ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT -}
71389ee9e8f07e01d3528e53c67b9a8a
  $s$fMonadIONoLoggingT3 ::
    GHC.Base.String
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a295 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Control.Monad.Logger.NoLoggingT
                        (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                        a295)
                   eta) -}
0107cf886bb2102840d626a153cbfd20
  $s$fMonadIONoLoggingT4 ::
    GHC.Base.Applicative
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fApplicativeNoLoggingT -}
0d075325e06c901393ef54af96071f6b
  $s$fMonadIONoLoggingT_$s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT1
                  Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO -}
25d568f2c30f06d73bcf8fec38496a37
  $s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a295 eta :: GHC.Types.IO a295 ->
                 let {
                   eta2 :: GHC.Types.IO a295 = GHC.Base.id @ (GHC.Types.IO a295) eta
                 } in
                 (\ ds3 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap ->
                  eta2)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                           <GHC.Types.IO>_R <a295>_N))) -}
c77e5f6b877b8e794b94baa3787a92fd
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT ::
    GHC.Base.Monad
      (Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT
                       (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                  Main.$s$fMonadIONoLoggingT4
                  (Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
                  (Control.Monad.Logger.$fMonadNoLoggingT_$creturn
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                     Main.$s$fMonadIONoLoggingT4
                     Main.$s$fApplicativeNoLoggingT1)
                  Main.$s$fMonadIONoLoggingT3 -}
adba12e54baaf86d9e095d446704deff
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>> ::
    Control.Monad.Logger.NoLoggingT
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a295
                   @ b
                   m7 :: Control.Monad.Logger.NoLoggingT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) a295
                   k5 :: Control.Monad.Logger.NoLoggingT
                           (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) b ->
                 Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                   Main.$s$fMonadIONoLoggingT4
                   Main.$s$fApplicativeNoLoggingT1
                   @ a295
                   @ b
                   m7
                   (\ ds3 :: a295 -> k5)) -}
d24bb8c106d5f3cc3ba77e135de9b44f
  $s$fMonadLoggerLoggingT ::
    Control.Monad.Logger.MonadLogger
      (Control.Monad.Logger.LoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                  Main.$s$fMonadBaseControlbLoggingT1
                  Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog -}
7ec5dc776852164440f2bcfa1725b3c0
  $s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog ::
    System.Log.FastLogger.LogStr.ToLogStr msg =>
    Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> msg
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*C1(U(U,U))><L,U><L,U><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ msg
                   $dToLogStr :: System.Log.FastLogger.LogStr.ToLogStr msg
                   a295 :: Language.Haskell.TH.Syntax.Loc
                   b :: Control.Monad.Logger.LogSource
                   c :: Control.Monad.Logger.LogLevel
                   d :: msg ->
                 let {
                   lvl346 :: System.Log.FastLogger.LogStr.LogStr
                   = $dToLogStr
                       `cast`
                     (System.Log.FastLogger.LogStr.NTCo:ToLogStr[0] <msg>_N)
                       d
                 } in
                 (\ f :: Language.Haskell.TH.Syntax.Loc
                         -> Control.Monad.Logger.LogSource
                         -> Control.Monad.Logger.LogLevel
                         -> System.Log.FastLogger.LogStr.LogStr
                         -> GHC.Types.IO () ->
                  GHC.Base.id @ (GHC.Types.IO ()) (f a295 b c lvl346))
                   `cast`
                 (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                           <GHC.Types.IO>_R <()>_N))) -}
b977544f74cdc0938d264b7368de2d62
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
                  Main.$s$fMonadWidgetWidgetT1
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ DBA.Pagina
                     @ GHC.Types.IO
                     Main.$s$fMonadWidgetWidgetT1
                     Main.$s$fMonadHandlerWidgetT1) -}
983d3adce5033ae2682625bfed9034eb
  $s$fMonadWidgetWidgetT1 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT DBA.Pagina GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fMonadHandlerWidgetT -}
735b9725689a29f1cff533f61cfae052
  $stoWidget4 ::
    Yesod.Core.Types.RY DBA.Pagina ~ Yesod.Core.Types.RY DBA.Pagina
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Yesod.Core.Types.RY DBA.Pagina)
                   @ (Yesod.Core.Types.RY DBA.Pagina)
                   @~ <Yesod.Core.Types.RY DBA.Pagina>_N) -}
3e621b9b9a85cfe7c17811f248435791
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv DBA.Pagina
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U(U,U(U,U,U,U,U,U,U,U,U,U)),U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
f6c8532e289b07abc5167dfcd674185a
  main :: GHC.Types.IO ()
  {- Unfolding: ((Main.main7
                    Main.main6
                    Main.main1
                      `cast`
                    (<Database.Persist.Sql.Types.ConnectionPool>_R
                     ->_R Trans
                              (<Language.Haskell.TH.Syntax.Loc
                                -> Control.Monad.Logger.LogSource
                                -> Control.Monad.Logger.LogLevel
                                -> System.Log.FastLogger.LogStr.LogStr
                                -> GHC.Types.IO ()>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Logger.NTCo:LoggingT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                   `cast`
                 (Control.Monad.Logger.NTCo:LoggingT[0] <GHC.Types.IO>_R <()>_N)
                   Control.Monad.Logger.runStdoutLoggingT1
                     `cast`
                   (<Language.Haskell.TH.Syntax.Loc>_R
                    ->_R <Control.Monad.Logger.LogSource>_R
                    ->_R <Control.Monad.Logger.LogLevel>_R
                    ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
432a6b0692f257ee79e3e32416f98add
  main1 ::
    Database.Persist.Sql.Types.ConnectionPool
    -> (Language.Haskell.TH.Syntax.Loc
        -> Control.Monad.Logger.LogSource
        -> Control.Monad.Logger.LogLevel
        -> System.Log.FastLogger.LogStr.LogStr
        -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Unfolding: (\ pool :: Database.Persist.Sql.Types.ConnectionPool
                   eta :: Language.Haskell.TH.Syntax.Loc
                          -> Control.Monad.Logger.LogSource
                          -> Control.Monad.Logger.LogLevel
                          -> System.Log.FastLogger.LogStr.LogStr
                          -> GHC.Types.IO ()
                   eta2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Control.Monad.Trans.Resource.runResourceT
                         @ GHC.Types.IO
                         @ ()
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (Database.Persist.Sql.Run.$swithResource1
                            @ Database.Persist.Sql.Types.SqlBackend
                            @ ()
                            pool
                            Main.main4)
                           `cast`
                         (Trans
                              (<GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                               ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                              (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                        <GHC.Types.IO>_R <()>_N))))
                        `cast`
                      (GHC.Types.NTCo:IO[0] <()>_R)
                        eta2 of ds3 { (#,#) ipv ipv1 ->
                 case Yesod.Static.static2
                        Main.main3
                        ipv of ds4 { (#,#) ipv2 ipv3 ->
                 Yesod.Core.Dispatch.warp1
                   @ DBA.Pagina
                   Main.$fYesodDispatchPagina
                   Main.main2
                   (DBA.Pagina
                      pool
                      (WaiAppStatic.Types.StaticSettings
                         (WaiAppStatic.Storage.Filesystem.defaultWebAppSettings5
                            (\ f :: GHC.IO.FilePath
                               s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                             (# s1,
                                Yesod.Static.$slookup1
                                  @ Data.ByteString.Internal.ByteString
                                  f
                                  ipv3 #))
                              `cast`
                            (<GHC.IO.FilePath>_R
                             ->_R Sym (GHC.Types.NTCo:IO[0]
                                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R))
                            Main.main3)
                           `cast`
                         (<WaiAppStatic.Types.Pieces>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0]
                                        <WaiAppStatic.Types.LookupResult>_R))
                         WaiAppStatic.Storage.Filesystem.defaultWebAppSettings1
                           `cast`
                         (<WaiAppStatic.Types.File>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0] <Network.Mime.MimeType>_R))
                         (GHC.Types.[] @ WaiAppStatic.Types.Piece)
                         (GHC.Base.Nothing @ WaiAppStatic.Types.Listing)
                         WaiAppStatic.Types.MaxAgeForever
                         Util.defaultMkRedirect
                         GHC.Types.False
                         GHC.Types.True
                         GHC.Types.False
                         (GHC.Base.Nothing @ Network.Wai.Application))
                        `cast`
                      (Sym (Yesod.Static.NTCo:Static[0])))
                   ipv2 } }) -}
00fde0c9dd045d16140bf6fe327cb707
  main2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8080) -}
5eb073f17ac54838655b33d45e43ab34
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "static"#) -}
bb69a7bb7866e0332da3a604ce09dc89
  main4 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.liftSqlPersistMPool_$srunSqlConn
                   @ ()
                   Main.main5
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Control.Monad.Logger.NoLoggingT
                                (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R
                             <()>_N))) -}
56dde5d29b8e34a2f87804d966497a81
  main5 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Control.Monad.Logger.NoLoggingT
         (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO) ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   a295 :: Control.Monad.Logger.NoLoggingT
                             (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                             [Data.Text.Internal.Text]
                   = Database.Persist.Sql.Migration.runMigration1
                       @ (Control.Monad.Logger.NoLoggingT
                            (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO))
                       Main.$s$fMonadIONoLoggingT
                       DBA.migrateAll1
                         `cast`
                       (Trans
                            (<Database.Persist.Sql.Types.SqlBackend>_R
                             ->_R Sym (GHC.Types.NTCo:IO[0]
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_R))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                           <Database.Persist.Sql.Types.SqlBackend>_R
                                           <GHC.Types.IO>_R
                                           <(((), [Data.Text.Internal.Text]),
                                             [(GHC.Types.Bool,
                                               Database.Persist.Sql.Types.Sql)])>_N))
                                 (Trans
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[(GHC.Types.Bool,
                                                   Database.Persist.Sql.Types.Sql)]>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Database.Persist.Sql.Types.SqlBackend
                                                   GHC.Types.IO>_R
                                                <((), [Data.Text.Internal.Text])>_N))
                                      (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                                <[Data.Text.Internal.Text]>_N
                                                <Control.Monad.Trans.Writer.Lazy.WriterT
                                                   Database.Persist.Sql.Types.CautiousMigration
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      Database.Persist.Sql.Types.SqlBackend
                                                      GHC.Types.IO)>_R
                                                <()>_N)))))
                       GHC.Types.False
                       eta
                 } in
                 (\ r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (a295
                          `cast`
                        (Trans
                             (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                  <Control.Monad.Trans.Resource.Internal.ResourceT
                                     GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N)
                             (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                  <GHC.Types.IO>_R <[Data.Text.Internal.Text]>_N))
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0] <[Data.Text.Internal.Text]>_R)
                         s of ds3 { (#,#) ipv ipv1 ->
                  (# ipv, GHC.Tuple.() #) })
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                      (Trans
                           (Sym (Control.Monad.Trans.Resource.Internal.NTCo:ResourceT[0]
                                     <GHC.Types.IO>_R <()>_N))
                           (Sym (Control.Monad.Logger.NTCo:NoLoggingT[0]
                                     <Control.Monad.Trans.Resource.Internal.ResourceT
                                        GHC.Types.IO>_R) <()>_N)))) -}
6d0dd610dab48d178fbd27094d5673b9
  main6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10) -}
68cb4d853fbaf0f01ade5c8d7df92092
  main7 ::
    GHC.Types.Int
    -> (Database.Persist.Sql.Types.ConnectionPool
        -> Control.Monad.Logger.LoggingT GHC.Types.IO ())
    -> Control.Monad.Logger.LoggingT GHC.Types.IO ()
  {- Unfolding: (Database.Persist.Postgresql.withPostgresqlPool
                   @ (Control.Monad.Logger.LoggingT GHC.Types.IO)
                   @ ()
                   Main.$s$fMonadBaseControlbLoggingT
                   Main.$s$fMonadLoggerLoggingT
                   Main.$s$fMonadIOLoggingT
                   Main.main8) -}
c1d641e555f3f02de87f477f0c5bd18e
  main8 :: Database.Persist.Postgresql.ConnectionString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds3 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr#
                   = "dbname=d73v9jtp1m4gmm host=ec2-23-21-193-140.compute-1.amazonaws.com user=wxijesuruymxxv password=olhACvaEhpoy498TfYAlN_kTYc port=5432"#
                 } in
                 case {__pkg_ccall bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6 strlen GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds4 ds5 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0
                   (GHC.Prim.word2Int# ds5) } }) -}
10469c541c19b4d1e34a43141bb9e920
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1 @ () Main.main) -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [DBA.Pagina]
  = Main.$fYesodDispatchPagina
"SPEC/Main $fApplicativeLoggingT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                      (Control.Monad.Logger.LoggingT
                                                                         GHC.Types.IO)
                                                       $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeLoggingT
"SPEC/Main $fApplicativeLoggingT_$cpure @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                             (Control.Monad.Logger.LoggingT
                                                                                GHC.Types.IO)
                                                              $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fApplicativeLoggingT_$cpure @ GHC.Types.IO
                                                    $dFunctor
                                                    $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fApplicativeLoggingT_$cpure
"SPEC/Main $fApplicativeNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                    (Control.Monad.Logger.NoLoggingT
                                                                                       (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                          GHC.Types.IO))
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                     GHC.Types.IO)
  Control.Monad.Logger.$fApplicativeNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                    GHC.Types.IO)
                                               $dFunctor
                                               $dMonad
  = Main.$s$fApplicativeNoLoggingT
"SPEC/Main $fApplicativeResourceT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                       (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                          GHC.Types.IO)
                                                        $dApplicative :: GHC.Base.Applicative
                                                                           GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               $dFunctor
                                                               $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT
"SPEC/Main $fApplicativeResourceT_$c*> @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
                                                             $dApplicative :: GHC.Base.Applicative
                                                                                GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*> @ GHC.Types.IO
                                                                    $dFunctor
                                                                    $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c*>
"SPEC/Main $fApplicativeResourceT_$c<* @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
                                                             $dApplicative :: GHC.Base.Applicative
                                                                                GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<* @ GHC.Types.IO
                                                                    $dFunctor
                                                                    $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$c<*
"SPEC/Main $fApplicativeResourceT_$cpure @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
                                                               $dApplicative :: GHC.Base.Applicative
                                                                                  GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dFunctor
                                                                      $dApplicative
  = Main.$s$fApplicativeNoLoggingT_$s$fApplicativeResourceT_$cpure
"SPEC/Main $fApplicativeWidgetT @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                              (Yesod.Core.Types.WidgetT
                                                                                 DBA.Pagina
                                                                                 GHC.Types.IO)
                                                               $dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ DBA.Pagina
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Main.$s$fApplicativeWidgetT
"SPEC/Main $fApplicativeWidgetT_$c*> @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ DBA.Pagina
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Main $fApplicativeWidgetT_$c<* @ Pagina @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ DBA.Pagina
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Main $fFunctorLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                GHC.Types.IO
  Control.Monad.Logger.$fFunctorLoggingT @ GHC.Types.IO $dMonad
  = Main.$s$fApplicativeLoggingT_$s$fFunctorLoggingT
"SPEC/Main $fFunctorNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
  Control.Monad.Logger.$fFunctorNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
"SPEC/Main $fFunctorResourceT @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                   GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           $dFunctor
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorResourceT
"SPEC/Main $fMonadBaseControlbLoggingT @ IO @ IO" [ALWAYS] forall $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   (Control.Monad.Logger.LoggingT
                                                                                      GHC.Types.IO)
                                                                  $dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                          GHC.Types.IO
                                                                                          GHC.Types.IO
  Control.Monad.Logger.$fMonadBaseControlbLoggingT @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   $dMonadBase
                                                   $dMonadBaseControl
  = Main.$s$fMonadBaseControlbLoggingT
"SPEC/Main $fMonadBasebLoggingT @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                              GHC.Types.IO
                                                           $dApplicative1 :: GHC.Base.Applicative
                                                                               (Control.Monad.Logger.LoggingT
                                                                                  GHC.Types.IO)
                                                           $dMonad :: GHC.Base.Monad GHC.Types.IO
                                                           $dMonad1 :: GHC.Base.Monad
                                                                         (Control.Monad.Logger.LoggingT
                                                                            GHC.Types.IO)
                                                           $dMonadBase :: Control.Monad.Base.MonadBase
                                                                            GHC.Types.IO
                                                                            GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT @ GHC.Types.IO
                                            @ GHC.Types.IO
                                            $dApplicative
                                            $dApplicative1
                                            $dMonad
                                            $dMonad1
                                            $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT
"SPEC/Main $fMonadBasebLoggingT_$cliftBase @ IO @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                      $dApplicative1 :: GHC.Base.Applicative
                                                                                          (Control.Monad.Logger.LoggingT
                                                                                             GHC.Types.IO)
                                                                      $dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO
                                                                      $dMonad1 :: GHC.Base.Monad
                                                                                    (Control.Monad.Logger.LoggingT
                                                                                       GHC.Types.IO)
                                                                      $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadBasebLoggingT_$cliftBase @ GHC.Types.IO
                                                       @ GHC.Types.IO
                                                       $dApplicative
                                                       $dApplicative1
                                                       $dMonad
                                                       $dMonad1
                                                       $dMonadBase
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadBasebLoggingT_$cliftBase
"SPEC/Main $fMonadBasebWidgetT @ IO @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                      GHC.Types.IO
                                                                   $dApplicative1 :: GHC.Base.Applicative
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          DBA.Pagina
                                                                                          GHC.Types.IO)
                                                                   $dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO
                                                                   $dMonad1 :: GHC.Base.Monad
                                                                                 (Yesod.Core.Types.WidgetT
                                                                                    DBA.Pagina
                                                                                    GHC.Types.IO)
                                                                   $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                    GHC.Types.IO
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ DBA.Pagina
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Main.$s$fMonadBasebWidgetT
"SPEC/Main $fMonadHandlerWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        DBA.Pagina
                                                                                        GHC.Types.IO)
                                                                tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                         GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ DBA.Pagina
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Main.$s$fMonadHandlerWidgetT
"SPEC/Main $fMonadIOLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                (Control.Monad.Logger.LoggingT
                                                                   GHC.Types.IO)
                                                   $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                  GHC.Types.IO
  Control.Monad.Logger.$fMonadIOLoggingT @ GHC.Types.IO
                                         $dMonad
                                         $dMonadIO
  = Main.$s$fMonadIOLoggingT
"SPEC/Main $fMonadIONoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Logger.NoLoggingT
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO))
                                                                 $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                   GHC.Types.IO)
  Control.Monad.Logger.$fMonadIONoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                GHC.Types.IO)
                                           $dMonad
                                           $dMonadIO
  = Main.$s$fMonadIONoLoggingT
"SPEC/Main $fMonadIOResourceT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                    GHC.Types.IO)
                                                    $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                   GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           $dMonad
                                                           $dMonadIO
  = Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                          (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                             GHC.Types.IO)
                                                             $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonad
                                                                    $dMonadIO
  = Main.$s$fMonadIONoLoggingT_$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadIOWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                        (Yesod.Core.Types.WidgetT
                                                                           DBA.Pagina GHC.Types.IO)
                                                           $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                          GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ DBA.Pagina
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Main $fMonadLoggerLoggingT @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                       $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                      GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT @ GHC.Types.IO
                                             $dMonad
                                             $dMonadIO
  = Main.$s$fMonadLoggerLoggingT
"SPEC/Main $fMonadLoggerLoggingT_$cmonadLoggerLog @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                                     (Control.Monad.Logger.LoggingT
                                                                                        GHC.Types.IO)
                                                                        $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                       GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggerLoggingT_$cmonadLoggerLog @ GHC.Types.IO
                                                              $dMonad
                                                              $dMonadIO
  = Main.$s$fMonadLoggerLoggingT_$s$fMonadLoggerLoggingT_$cmonadLoggerLog
"SPEC/Main $fMonadLoggingT @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                    (Control.Monad.Logger.LoggingT
                                                                       GHC.Types.IO)
                                                 $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Logger.$fMonadLoggingT @ GHC.Types.IO
                                       $dApplicative
                                       $dMonad
  = Main.$s$fMonadBaseControlbLoggingT_$s$fMonadLoggingT
"SPEC/Main $fMonadNoLoggingT @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                  (Control.Monad.Logger.NoLoggingT
                                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                        GHC.Types.IO))
                                                               $dMonad :: GHC.Base.Monad
                                                                            (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                               GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                              GHC.Types.IO)
                                         $dApplicative
                                         $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT
"SPEC/Main $fMonadNoLoggingT_$c>> @ (ResourceT IO)" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                          (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                             GHC.Types.IO))
                                                                    $dMonad :: GHC.Base.Monad
                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                    GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT_$c>> @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                                   GHC.Types.IO)
                                              $dApplicative
                                              $dMonad
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT_$c>>
"SPEC/Main $fMonadResourceT @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                     (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                        GHC.Types.IO)
                                                  $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         $dApplicative
                                                         $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT_$creturn @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                              (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                 GHC.Types.IO)
                                                           $dMonad :: GHC.Base.Monad GHC.Types.IO
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ GHC.Types.IO
                                                                  $dApplicative
                                                                  $dMonad
  = Main.$s$fApplicativeNoLoggingT_$s$fMonadResourceT_$creturn
"SPEC/Main $fMonadResourceWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                                 $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                (Yesod.Core.Types.WidgetT
                                                                                   DBA.Pagina
                                                                                   GHC.Types.IO)
                                                                 $dApplicative :: GHC.Base.Applicative
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       DBA.Pagina
                                                                                       GHC.Types.IO)
                                                                 $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                  GHC.Types.IO
                                                                                  (Yesod.Core.Types.WidgetT
                                                                                     DBA.Pagina
                                                                                     GHC.Types.IO)
                                                                 $dApplicative1 :: GHC.Base.Applicative
                                                                                     GHC.Types.IO
                                                                 $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                 GHC.Types.IO
                                                                 $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                   GHC.Types.IO
                                                                                   GHC.Types.IO
                                                                 $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ DBA.Pagina
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Main $fMonadThrowWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                           (Yesod.Core.Types.WidgetT
                                                                              DBA.Pagina
                                                                              GHC.Types.IO)
                                                              $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ DBA.Pagina
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Main.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Main $fMonadWidgetT @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                            (Yesod.Core.Types.WidgetT
                                                                               DBA.Pagina
                                                                               GHC.Types.IO)
                                                         $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ DBA.Pagina
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Main.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
"SPEC/Main $fMonadWidgetT_$creturn @ Pagina @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        DBA.Pagina
                                                                                        GHC.Types.IO)
                                                                  $dMonad :: GHC.Base.Monad
                                                                               GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT_$creturn @ DBA.Pagina
                                           @ GHC.Types.IO
                                           $dApplicative
                                           $dMonad
  = Main.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
"SPEC/Main $fMonadWidgetWidgetT @ Pagina @ IO" [ALWAYS] forall $dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      DBA.Pagina
                                                                                      GHC.Types.IO)
                                                               tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                        GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ DBA.Pagina
                                                @ GHC.Types.IO
                                                $dMonadHandler
                                                tup
  = Main.$s$fMonadWidgetWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

